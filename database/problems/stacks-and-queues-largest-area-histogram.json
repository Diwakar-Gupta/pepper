{
  "name": "Largest Area Histogram",
  "slug": "stacks-and-queues-largest-area-histogram",
  "description": "1. You are given a number n, representing the size of array a.\n2. You are given n numbers, representing the height of bars in a bar chart.\n3. You are required to find and print the area of largest rectangle in the histogram.\n\ne.g.\nfor the array [6 2 5 4 5 1 6] -> 12\n\n### Input Format\n```\nInput is managed for you\n```\n\n### Output Format\n```\nA number representing area of largest rectangle in histogram\n```\n\n### Constraints\n```\n0 <= n < 20\n0 <= a[i] <= 10\n```\n\n### Sample Input\n```\n7\n6\n2\n5\n4\n5\n1\n6\n```\n\n### Sample Output\n```\n12\n```",
  "externalPlatforms": [],
  "problemVideoLink": "https://www.youtube.com/embed/m01ubOp-FMg?rel=0",
  "solutionVideolink": "https://www.youtube.com/embed/0do2734xhnU?rel=0&loop=1&playlist=0do2734xhnU",
  "codes": {
    "java": "import java\n.io.*;\nimport java\n.util.*;\npublic class \nMain{\n  \npublic \nstatic void \nmain(String[\n] args) \nthrows \nException {\n    Buffered\nReader br = \nnew Buffered\nReader(new \nInputStreamR\neader(System\n.in));\n    int n = \nInteger\n.parseInt(br\n.readLine\n());\n    int[] a \n= new int[n]\n;\n    for(int \ni = 0; i < n\n; i++){\n       a[i] \n= Integer\n.parseInt(br\n.readLine\n());"
  }
}