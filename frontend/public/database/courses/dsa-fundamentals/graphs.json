[
  {
    "type": "Code",
    "slug": "has-path-easy",
    "name": "Has Path? Easy"
  },
  {
    "type": "Code",
    "slug": "print-all-paths-easy",
    "name": "Print All Paths Easy"
  },
  {
    "type": "Code",
    "slug": "multisolver-smallest-longest-ceil-floor-kthlargest-path-easy",
    "name": "Multisolver - Smallest, Longest, Ceil, Floor, Kthlargest Path Easy"
  },
  {
    "type": "Code",
    "slug": "get-connected-components-of-a-graph-easy",
    "name": "Get Connected Components Of A Graph Easy"
  },
  {
    "type": "Code",
    "slug": "is-graph-connected-easy",
    "name": "Is Graph Connected Easy"
  },
  {
    "type": "Code",
    "slug": "number-of-islands-easy",
    "name": "Number Of Islands Easy"
  },
  {
    "type": "Code",
    "slug": "perfect-friends-easy",
    "name": "Perfect Friends Easy"
  },
  {
    "type": "Code",
    "slug": "hamiltonian-path-and-cycle-easy",
    "name": "Hamiltonian Path And Cycle Easy"
  },
  {
    "type": "Code",
    "slug": "knights-tour-easy",
    "name": "Knights Tour Easy"
  },
  {
    "type": "Code",
    "slug": "breadth-first-traversal-easy",
    "name": "Breadth First Traversal Easy"
  },
  {
    "type": "Code",
    "slug": "is-graph-cyclic-easy",
    "name": "Is Graph Cyclic Easy"
  },
  {
    "type": "Code",
    "slug": "is-graph-bipartite-easy",
    "name": "Is Graph Bipartite Easy"
  },
  {
    "type": "Code",
    "slug": "spread-of-infection-easy",
    "name": "Spread Of Infection Easy"
  },
  {
    "type": "Code",
    "slug": "shortest-path-in-weights-easy",
    "name": "Shortest Path In Weights Easy"
  },
  {
    "type": "Code",
    "slug": "minimum-wire-required-to-connect-all-pcs-easy",
    "name": "Minimum Wire Required To Connect All Pcs Easy"
  },
  {
    "type": "Code",
    "slug": "order-of-compilation-easy",
    "name": "Order Of Compilation Easy"
  },
  {
    "type": "Code",
    "slug": "iterative-depth-first-traversal-easy",
    "name": "Iterative Depth First Traversal Easy"
  }
]