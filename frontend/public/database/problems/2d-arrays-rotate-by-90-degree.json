{
  "name": "Rotate By 90 Degree",
  "slug": "2d-arrays-rotate-by-90-degree",
  "description": "1. You are given a number n, representing the number of rows and number of columns.\n2. You are given n*n numbers, representing elements of 2d array a.\n3. You are required to rotate the matrix by 90 degree clockwise and then display the contents using display function.\n*Note - you are required to do it in-place i.e. no extra space should be used to achieve it .*\n\n### Input Format\n```\nA number n\ne11\ne12..\ne21\ne22..\n.. n * n number of elements\n```\n\n### Output Format\n```\noutput is taken care of by display function\n```\n\n### Constraints\n```\n1 <= n <= 10^2\n-10^9 <= e1, e2, .. n * n elements <= 10^9\n```\n\n### Sample Input\n```\n4\n11\n12\n13\n14\n21\n22\n23\n24\n31\n32\n33\n34\n41\n42\n43\n44\n```\n\n### Sample Output\n```\n41 31 21 11\n42 32 22 12\n43 33 23 13\n44 34 24 14\n```",
  "externalPlatforms": [],
  "problemVideoLink": "https://www.youtube.com/embed/0qj4kRcuKqo?rel=0",
  "solutionVideolink": "https://www.youtube.com/embed/SoxrXQbhCPI?rel=0&loop=1&playlist=SoxrXQbhCPI",
  "codes": {
    "java": "import \njava.io\n.*;\nimport \njava\n.util.*;\npublic \nclass \nMain {\n    \npublic \nstatic \nvoid \nmain\n(String[\n] args) \nthrows \nExceptio\nn {\n        \n// write \nyour \ncode \nhere\n    }\n    \npublic \nstatic \nvoid \ndisplay\n(int[][] \narr){\n        \nfor(int \ni = 0; i \n< arr\n.length; \ni++){"
  }
}