{
  "name": "Infix Conversions",
  "slug": "stacks-and-queues-infix-conversions",
  "description": "1. You are given an infix expression.\n2. You are required to convert it to postfix and print it.\n3. You are required to convert it to prefix and print it.\n\n### Input Format\n```\nInput is managed for you\n```\n\n### Output Format\n```\npostfix\nprefix\n```\n\n### Constraints\n```\n1. Expression is balanced\n2. The only operators used are +, -, *, /\n3. Opening and closing brackets - () - are used to impact precedence of operations\n4. + and - have equal precedence which is less than * and /. * and / also have equal precedence.\n5. In two operators of equal precedence give preference to the one on left.\n6. All operands are single digit numbers.\n```\n\n### Sample Input\n```\na*(b-c+d)/e\n```\n\n### Sample Output\n```\nabc-d+*e/\n/*a+-bcde\n```",
  "externalPlatforms": [],
  "problemVideoLink": "https://www.youtube.com/embed/Nfui0rgbQe8?rel=0",
  "solutionVideolink": "https://www.youtube.com/embed/f29emeUcw6c?rel=0&loop=1&playlist=f29emeUcw6c",
  "codes": {
    "java": "import java\n.io.*;\nimport java\n.util.*;\npublic \nclass Main{\n  \npublic \nstatic void \nmain\n(String[] \nargs) \nthrows \nException {\n    \nBufferedRea\nder br = \nnew \nBufferedRea\nder(new \nInputStream\nReader\n(System.in\n));\n    String \nexp = br\n.readLine\n();\n    // code\n }\n}"
  }
}