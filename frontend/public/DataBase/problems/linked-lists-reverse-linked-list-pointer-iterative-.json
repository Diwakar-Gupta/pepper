{
  "name": "Reverse Linked List (pointer Iterative)",
  "slug": "linked-lists-reverse-linked-list-pointer-iterative-",
  "description": "1. You are given a partially written LinkedList class.\n2. Here is a list of existing functions:\n    2.1 addLast - adds a new element with given value to the end of Linked List\n    2.2. display - Prints the elements of linked list from front to end in a single line. \n    All elements are separated by space\n    2.3. size - Returns the number of elements in the linked list.\n    2.4. removeFirst - Removes the first element from Linked List. \n    2.5. getFirst - Returns the data of first element. \n    2.6. getLast - Returns the data of last element. \n    2.7. getAt - Returns the data of element available at the index passed. \n    2.8. addFirst - adds a new element with given value in front of linked list.\n    2.9. addAt - adds a new element at a given index.\n    2.10. removeLast - removes the last element of linked list.\n    2.11. removeAt - remove an element at a given index\n3. You are required to complete the body of reversePI function. The function should be an iterative function and should reverse the contents of linked list by changing the \"next\" property of nodes.\n4. Input and Output is managed for you.\n\n### Input Format\n```\nInput is managed for you\n```\n\n### Output Format\n```\nOutput is managed for you\n```\n\n### Constraints\n```\nNone\n```\n\n### Sample Input\n```\naddFirst 10\naddFirst 20\naddLast 30\naddLast 40\naddLast 50\naddFirst 60\nremoveAt 2\ndisplay\nreversePI\ndisplay\nquit\n```\n\n### Sample Output\n```\n60 20 30 40 50 \n50 40 30 20 60\n```",
  "externalPlatforms": [],
  "problemVideoLink": "https://www.youtube.com/embed/iAEvqhaeD88?rel=0",
  "solutionVideolink": "https://www.youtube.com/embed/71NqKy7287g?rel=0&loop=1&playlist=71NqKy7287g",
  "codes": {
    "java": ""
  }
}