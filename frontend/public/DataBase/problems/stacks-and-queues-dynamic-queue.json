{
  "name": "Dynamic Queue",
  "slug": "stacks-and-queues-dynamic-queue",
  "description": "1. You are required to complete the code of our CustomQueue class. The class should mimic the behaviour of a Queue and implement FIFO semantic.\n2. Here is the list of functions that are written in the class\n    2.1. add -> Accepts new data if there is space available in the underlying array or \n    print \"Queue overflow\" otherwise.\n    2.2. remove -> Removes and returns value according to FIFO, if available or print \n    \"Queue underflow\" otherwise and return -1.\n    2.3. peek -> Returns value according to FIFO, if available or print \"Queue \n     underflow\" otherwise and return -1.\n    2.4. size -> Returns the number of elements available in the queue.\n    2.5. display -> Prints the elements of queue in FIFO manner (space-separated) \n    ending with a line-break.\n3. Input and Output is managed for you.\n\n### Input Format\n```\nInput is managed for you\n```\n\n### Output Format\n```\nOutput is managed for you\n```\n\n### Constraints\n```\nNone\n```\n\n### Sample Input\n```\n5\nadd 10\ndisplay\nadd 20\ndisplay\nadd 30\ndisplay\nadd 40\ndisplay\nadd 50\ndisplay\nadd 60\ndisplay\npeek\nremove\ndisplay\npeek\nremove\ndisplay\npeek\nremove\ndisplay\npeek\nremove\ndisplay\npeek\nremove\ndisplay\npeek\nremove\nquit\n```\n\n### Sample Output\n```\n10 \n10 20 \n10 20 30 \n10 20 30 40 \n10 20 30 40 50 \n10 20 30 40 50 60 \n10\n10\n20 30 40 50 60 \n20\n20\n30 40 50 60 \n30\n30\n40 50 60 \n40\n40\n50 60 \n50\n50\n60 \n60\n60\n```",
  "externalPlatforms": [],
  "problemVideoLink": "https://www.youtube.com/embed/gluUcS0Rue8?rel=0",
  "solutionVideolink": "https://www.youtube.com/embed/fnaL-RyK0m0?rel=0&loop=1&playlist=fnaL-RyK0m0",
  "codes": {
    "java": ""
  }
}