{
  "name": "Linked List To Queue Adapter",
  "slug": "linked-lists-linked-list-to-queue-adapter",
  "description": "1. You are required to complete the code of our LLToQueueAdapter class. \n2. As data members, you've a linkedlist available in the class.\n3. Here is the list of functions that you are supposed to complete\n     3.1. add -> Should accept new data in FIFO manner\n     3.2. remove -> Should remove and return data in FIFO manner. If not available, \n     print \"Queue underflow\" and return -1.\n     3.3. peek -> Should return data in FIFO manner. If not available, print \"Queue \n     underflow\" and return -1.\n     3.4. size -> Should return the number of elements available in the queue\n4. Input and Output is managed for you.\n\nNote -> The intention is to use linked list functions to achieve the purpose of a queue. All the functions should work in constant time.\n\n### Input Format\n```\nInput is managed for you\n```\n\n### Output Format\n```\nOutput is managed for you\n```\n\n### Constraints\n```\nNone\n```\n\n### Sample Input\n```\nadd 10\nadd 20\nadd 30\nadd 40\nadd 50\nadd 60\npeek\nremove\npeek\nremove\npeek\nremove\npeek\nremove\npeek\nremove\npeek\nremove\nquit\n```\n\n### Sample Output\n```\n10\n10\n20\n20\n30\n30\n40\n40\n50\n50\n60\n60\n```",
  "externalPlatforms": [],
  "problemVideoLink": "https://www.youtube.com/embed/BzeEZZTsNKA?rel=0",
  "solutionVideolink": "https://www.youtube.com/embed/0XIbegDY_8k?rel=0&loop=1&playlist=0XIbegDY_8k",
  "codes": {
    "java": "import java.io.*;\nimport java.util.*;\npublic class Main {\n  public static class \nLLToQueueAdapter {\n    LinkedList<Integer> list\n;\n    public LLToQueueAdapter\n() {\n      list = new LinkedList\n<>();\n    }\n    int size() {\n      // write your code \nhere\n    }\n    void add(int val) {\n      // write your code \nhere\n    }\n    int remove() {\n      // write your code \nhere\n    }\n    int peek() {\n      // write your code \nhere\n    }\n  }"
  }
}