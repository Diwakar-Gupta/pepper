{"mappings":"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","sources":["<anon>","src/components/TabbedTestCases.jsx","src/repository/getTestCases.js","node_modules/@parcel/runtime-js/lib/runtime-97c13cc02c4c29ef.js"],"sourcesContent":["\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire17b7\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"bBOJn\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $009f58023029c5c3$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $jEyqx = parcelRequire(\"jEyqx\");\n\nvar $8Qx3l = parcelRequire(\"8Qx3l\");\n\nvar $8kNj5 = parcelRequire(\"8kNj5\");\n\nconst $009f58023029c5c3$var$TabbedTestCases = ({ code: code, language: language, onRun: onRun, runResult: runResult, judgeAvailable: judgeAvailable, problemSlug: problemSlug })=>{\n    const [testCases, setTestCases] = (0, $acw62.useState)([\n        {\n            input: \"\",\n            expectedOutput: \"\"\n        }\n    ]);\n    const [mainTab, setMainTab] = (0, $acw62.useState)('testcases'); // 'testcases' or 'results'\n    const [activeTestCaseTab, setActiveTestCaseTab] = (0, $acw62.useState)(0);\n    const [activeResultTab, setActiveResultTab] = (0, $acw62.useState)(0);\n    const [isLoading, setIsLoading] = (0, $acw62.useState)(false);\n    const [problemTestCases, setProblemTestCases] = (0, $acw62.useState)([]);\n    const [hasTestCases, setHasTestCases] = (0, $acw62.useState)(false);\n    const [isSubmitting, setIsSubmitting] = (0, $acw62.useState)(false);\n    const [submissionResult, setSubmissionResult] = (0, $acw62.useState)(null);\n    // Load test cases when problemSlug changes\n    (0, $acw62.useEffect)(()=>{\n        if (problemSlug) {\n            const loadTestCases = async ()=>{\n                try {\n                    const cases = await (0, $8kNj5.getTestCases)(problemSlug);\n                    setProblemTestCases(cases);\n                    setHasTestCases(cases.length > 0);\n                    // Set the first test case as the default test case in the UI\n                    if (cases.length > 0) setTestCases([\n                        cases[0]\n                    ]);\n                    else setTestCases([\n                        {\n                            input: \"\",\n                            expectedOutput: \"\"\n                        }\n                    ]);\n                } catch (error) {\n                    console.error('Error loading test cases:', error);\n                    setHasTestCases(false);\n                    setTestCases([\n                        {\n                            input: \"\",\n                            expectedOutput: \"\"\n                        }\n                    ]);\n                }\n            };\n            loadTestCases();\n        }\n    }, [\n        problemSlug\n    ]);\n    // Handle case when judge is not available\n    if (!judgeAvailable) return /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n        className: \"bg-gray-100 p-4 border border-gray-300 rounded-md shadow-md\",\n        children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n            className: \"text-center text-gray-600\",\n            children: [\n                /*#__PURE__*/ (0, $ayMG0.jsx)(\"p\", {\n                    className: \"font-medium mb-2\",\n                    children: \"Code Execution Unavailable\"\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsxs)(\"p\", {\n                    className: \"text-sm\",\n                    children: [\n                        \"Please start the judge server to enable code execution. \",\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"a\", {\n                            href: \"https://github.com/Diwakar-Gupta/pepper/blob/main/judge/README.md\",\n                            target: \"_blank\",\n                            rel: \"noopener noreferrer\",\n                            className: \"text-blue-600 underline hover:text-blue-800\",\n                            children: \"View setup instructions\"\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n    // Handle case when language is not selected\n    if (!language) return /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n        className: \"bg-gray-100 p-4 border border-gray-300 rounded-md shadow-md\",\n        children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n            className: \"text-center text-gray-600\",\n            children: [\n                /*#__PURE__*/ (0, $ayMG0.jsx)(\"p\", {\n                    className: \"font-medium mb-2\",\n                    children: \"No Language Selected\"\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsx)(\"p\", {\n                    className: \"text-sm\",\n                    children: \"Please select a programming language to run code.\"\n                })\n            ]\n        })\n    });\n    const addTestCase = ()=>{\n        const newIndex = testCases.length;\n        setTestCases([\n            ...testCases,\n            {\n                input: \"\",\n                expectedOutput: \"\"\n            }\n        ]);\n        setActiveTestCaseTab(newIndex);\n    };\n    const removeTestCase = (index)=>{\n        if (testCases.length > 1) {\n            const newTestCases = testCases.filter((_, i)=>i !== index);\n            setTestCases(newTestCases);\n            // Adjust active tabs if necessary\n            if (activeTestCaseTab >= newTestCases.length) setActiveTestCaseTab(newTestCases.length - 1);\n            else if (activeTestCaseTab > index) setActiveTestCaseTab(activeTestCaseTab - 1);\n            if (activeResultTab >= newTestCases.length) setActiveResultTab(Math.max(0, newTestCases.length - 1));\n            else if (activeResultTab > index) setActiveResultTab(activeResultTab - 1);\n        }\n    };\n    const updateTestCase = (index, field, value)=>{\n        const updated = [\n            ...testCases\n        ];\n        updated[index][field] = value;\n        setTestCases(updated);\n    };\n    const handleRunWithTestCases = async ()=>{\n        const validTestCases = testCases.filter((tc)=>tc.input.trim() !== \"\");\n        setIsLoading(true);\n        try {\n            await onRun(validTestCases);\n            // Switch to results main tab after running\n            setMainTab('results');\n            setActiveResultTab(0);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const handleSubmit = async ()=>{\n        if (!hasTestCases) {\n            alert(\"No test cases available for this problem.\");\n            return;\n        }\n        setIsSubmitting(true);\n        try {\n            // Import the submit function\n            const { submitCodeWithTestCases: submitCodeWithTestCases } = await (parcelRequire(\"jUTwv\"));\n            const result = await submitCodeWithTestCases({\n                code: code,\n                language: language,\n                problemSlug: problemSlug\n            });\n            // Handle the submission result\n            console.log(\"Submission result:\", result);\n            setSubmissionResult(result);\n        } catch (error) {\n            console.error(\"Submission error:\", error);\n            alert(`Submission failed: ${error.message}`);\n        } finally{\n            setIsSubmitting(false);\n        }\n    };\n    const getStatusIcon = (passed)=>{\n        if (passed === true) return /*#__PURE__*/ (0, $ayMG0.jsx)((0, $jEyqx.FontAwesomeIcon), {\n            icon: (0, $8Qx3l.faCheck),\n            className: \"text-green-500\"\n        });\n        else if (passed === false) return /*#__PURE__*/ (0, $ayMG0.jsx)((0, $jEyqx.FontAwesomeIcon), {\n            icon: (0, $8Qx3l.faTimes),\n            className: \"text-red-500\"\n        });\n        return /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n            className: \"text-gray-400\",\n            children: \"-\"\n        });\n    };\n    const getStatusText = (passed)=>{\n        if (passed === true) return \"Passed\";\n        if (passed === false) return \"Failed\";\n        return \"No expected output\";\n    };\n    const hasResults = runResult.results && runResult.results.length > 0;\n    return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n        className: \"bg-white border border-gray-300 rounded-md shadow-md relative\",\n        children: [\n            isLoading && /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                className: \"absolute inset-0 bg-white bg-opacity-70 flex items-center justify-center z-10 rounded-md\",\n                children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                    className: \"flex flex-col items-center\",\n                    children: [\n                        /*#__PURE__*/ (0, $ayMG0.jsxs)(\"svg\", {\n                            className: \"animate-spin h-8 w-8 text-blue-500 mb-2\",\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            fill: \"none\",\n                            viewBox: \"0 0 24 24\",\n                            children: [\n                                /*#__PURE__*/ (0, $ayMG0.jsx)(\"circle\", {\n                                    className: \"opacity-25\",\n                                    cx: \"12\",\n                                    cy: \"12\",\n                                    r: \"10\",\n                                    stroke: \"currentColor\",\n                                    strokeWidth: \"4\"\n                                }),\n                                /*#__PURE__*/ (0, $ayMG0.jsx)(\"path\", {\n                                    className: \"opacity-75\",\n                                    fill: \"currentColor\",\n                                    d: \"M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z\"\n                                })\n                            ]\n                        }),\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                            className: \"text-blue-600 font-medium\",\n                            children: \"Running test cases...\"\n                        })\n                    ]\n                })\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"border-b border-gray-200 bg-gray-50 rounded-t-md\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        className: \"flex\",\n                        children: [\n                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                                onClick: ()=>setMainTab('testcases'),\n                                className: `px-4 py-3 text-sm font-medium border-b-2 transition-colors ${mainTab === 'testcases' ? 'border-blue-500 text-blue-600 bg-white' : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-100'}`,\n                                children: \"Test Cases\"\n                            }),\n                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                                onClick: ()=>setMainTab('results'),\n                                className: `px-4 py-3 text-sm font-medium border-b-2 transition-colors ${mainTab === 'results' ? 'border-blue-500 text-blue-600 bg-white' : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-100'} ${!hasResults ? 'opacity-50 cursor-not-allowed' : ''}`,\n                                disabled: !hasResults,\n                                children: \"Test Results\"\n                            })\n                        ]\n                    }),\n                    mainTab === 'testcases' && /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                        className: \"flex items-center bg-gray-100 border-t border-gray-200\",\n                        children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                            className: \"flex items-center overflow-x-auto scrollbar-thin scrollbar-thumb-gray-300\",\n                            children: [\n                                testCases.map((_, index)=>/*#__PURE__*/ (0, $ayMG0.jsxs)(\"button\", {\n                                        onClick: ()=>setActiveTestCaseTab(index),\n                                        className: `px-3 py-2 text-xs font-medium whitespace-nowrap border-b-2 transition-colors ${activeTestCaseTab === index ? 'border-blue-400 text-blue-600 bg-white' : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-50'}`,\n                                        children: [\n                                            \"Case \",\n                                            index + 1\n                                        ]\n                                    }, index)),\n                                /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                                    onClick: addTestCase,\n                                    className: \"px-3 py-2 text-xs font-medium text-gray-600 hover:text-blue-600 hover:bg-gray-50 transition-colors\",\n                                    title: \"Add Test Case\",\n                                    children: /*#__PURE__*/ (0, $ayMG0.jsx)((0, $jEyqx.FontAwesomeIcon), {\n                                        icon: (0, $8Qx3l.faPlus)\n                                    })\n                                })\n                            ]\n                        })\n                    }),\n                    mainTab === 'results' && hasResults && /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                        className: \"flex items-center bg-gray-100 border-t border-gray-200\",\n                        children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                            className: \"flex items-center overflow-x-auto scrollbar-thin scrollbar-thumb-gray-300\",\n                            children: runResult.results.map((result, index)=>/*#__PURE__*/ (0, $ayMG0.jsxs)(\"button\", {\n                                    onClick: ()=>setActiveResultTab(index),\n                                    className: `px-3 py-2 text-xs font-medium whitespace-nowrap border-b-2 transition-colors flex items-center gap-1 ${activeResultTab === index ? 'border-blue-400 text-blue-600 bg-white' : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-50'}`,\n                                    children: [\n                                        getStatusIcon(result.passed),\n                                        \"Case \",\n                                        result.testCase\n                                    ]\n                                }, index))\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"p-4\",\n                children: [\n                    mainTab === 'testcases' && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        className: \"space-y-4\",\n                        children: [\n                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                className: \"flex items-center justify-between\",\n                                children: [\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"h3\", {\n                                        className: \"font-medium text-gray-700\",\n                                        children: [\n                                            \"Test Case \",\n                                            activeTestCaseTab + 1\n                                        ]\n                                    }),\n                                    testCases.length > 1 && /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                                        onClick: ()=>removeTestCase(activeTestCaseTab),\n                                        className: \"text-red-500 hover:text-red-700 text-sm\",\n                                        title: \"Remove Test Case\",\n                                        children: /*#__PURE__*/ (0, $ayMG0.jsx)((0, $jEyqx.FontAwesomeIcon), {\n                                            icon: (0, $8Qx3l.faTrash)\n                                        })\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                className: \"space-y-3\",\n                                children: [\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                                className: \"block text-sm font-medium text-gray-600 mb-1\",\n                                                children: \"Input:\"\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"textarea\", {\n                                                value: testCases[activeTestCaseTab]?.input || \"\",\n                                                onChange: (e)=>updateTestCase(activeTestCaseTab, 'input', e.target.value),\n                                                className: \"w-full p-2 border border-gray-300 rounded-md text-sm font-mono resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                                                rows: \"4\",\n                                                placeholder: \"Enter test input...\",\n                                                style: {\n                                                    maxHeight: '150px',\n                                                    overflowY: 'auto'\n                                                }\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                                className: \"block text-sm font-medium text-gray-600 mb-1\",\n                                                children: \"Expected Output:\"\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"textarea\", {\n                                                value: testCases[activeTestCaseTab]?.expectedOutput || \"\",\n                                                onChange: (e)=>updateTestCase(activeTestCaseTab, 'expectedOutput', e.target.value),\n                                                className: \"w-full p-2 border border-gray-300 rounded-md text-sm font-mono resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                                                rows: \"4\",\n                                                placeholder: \"Enter expected output (optional)...\",\n                                                style: {\n                                                    maxHeight: '150px',\n                                                    overflowY: 'auto'\n                                                }\n                                            })\n                                        ]\n                                    })\n                                ]\n                            })\n                        ]\n                    }),\n                    mainTab === 'results' && hasResults && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        className: \"space-y-4\",\n                        children: [\n                            runResult.summary && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                className: \"p-3 bg-gray-50 rounded-md\",\n                                children: [\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"h4\", {\n                                        className: \"font-medium text-gray-700 mb-2\",\n                                        children: \"Summary:\"\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        className: \"flex space-x-4 text-sm\",\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                                                className: \"text-green-600\",\n                                                children: [\n                                                    \"\\u2713 \",\n                                                    runResult.summary.passed,\n                                                    \" Passed\"\n                                                ]\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                                                className: \"text-red-600\",\n                                                children: [\n                                                    \"\\u2717 \",\n                                                    runResult.summary.failed,\n                                                    \" Failed\"\n                                                ]\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                                                className: \"text-gray-600\",\n                                                children: [\n                                                    \"- \",\n                                                    runResult.summary.noExpectedOutput,\n                                                    \" No Expected Output\"\n                                                ]\n                                            })\n                                        ]\n                                    })\n                                ]\n                            }),\n                            runResult.results[activeResultTab] && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                className: \"space-y-3\",\n                                children: [\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        className: \"flex items-center justify-between\",\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"h3\", {\n                                                className: \"font-medium text-gray-700\",\n                                                children: [\n                                                    \"Test Case \",\n                                                    runResult.results[activeResultTab].testCase\n                                                ]\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                                className: \"flex items-center space-x-2\",\n                                                children: [\n                                                    getStatusIcon(runResult.results[activeResultTab].passed),\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                                                        className: `text-sm ${runResult.results[activeResultTab].passed === true ? 'text-green-600' : runResult.results[activeResultTab].passed === false ? 'text-red-600' : 'text-gray-600'}`,\n                                                        children: getStatusText(runResult.results[activeResultTab].passed)\n                                                    })\n                                                ]\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        className: \"space-y-3\",\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                                        className: \"block text-sm font-medium text-gray-600 mb-1\",\n                                                        children: \"Input:\"\n                                                    }),\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                        className: \"bg-gray-100 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border\",\n                                                        children: runResult.results[activeResultTab].input || \"(empty)\"\n                                                    })\n                                                ]\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                                        className: \"block text-sm font-medium text-gray-600 mb-1\",\n                                                        children: \"Output:\"\n                                                    }),\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                        className: \"bg-gray-100 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border\",\n                                                        children: runResult.results[activeResultTab].actualOutput || \"(no output)\"\n                                                    })\n                                                ]\n                                            }),\n                                            runResult.results[activeResultTab].expectedOutput && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                                        className: \"block text-sm font-medium text-gray-600 mb-1\",\n                                                        children: \"Expected Output:\"\n                                                    }),\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                        className: \"bg-gray-100 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border\",\n                                                        children: runResult.results[activeResultTab].expectedOutput\n                                                    })\n                                                ]\n                                            }),\n                                            runResult.results[activeResultTab].stderr && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                                        className: \"block text-sm font-medium text-red-600 mb-1\",\n                                                        children: \"Error:\"\n                                                    }),\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                        className: \"bg-red-100 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border border-red-200 text-red-700\",\n                                                        children: runResult.results[activeResultTab].stderr\n                                                    })\n                                                ]\n                                            }),\n                                            runResult.results[activeResultTab].passed === false && runResult.results[activeResultTab].diff && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                                        className: \"block text-sm font-medium text-yellow-700 mb-1\",\n                                                        children: \"Difference:\"\n                                                    }),\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                        className: \"bg-yellow-50 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border border-yellow-200\",\n                                                        children: runResult.results[activeResultTab].diff\n                                                    })\n                                                ]\n                                            })\n                                        ]\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                ]\n            }),\n            submissionResult && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"p-4 border-t border-gray-200\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"h4\", {\n                        className: \"font-medium text-gray-700 mb-2\",\n                        children: \"Submission Result:\"\n                    }),\n                    submissionResult.failed ? /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        className: \"p-3 border border-red-200 rounded-md bg-red-50\",\n                        children: [\n                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                                className: \"flex items-center mb-2\",\n                                children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                                    className: \"text-red-600 font-medium\",\n                                    children: [\n                                        \"\\u274C Test Case \",\n                                        submissionResult.testCaseNumber,\n                                        \" Failed\"\n                                    ]\n                                })\n                            }),\n                            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                className: \"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm\",\n                                children: [\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                                                className: \"font-medium text-gray-600\",\n                                                children: \"Input:\"\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                className: \"bg-gray-100 p-2 rounded mt-1 whitespace-pre-wrap\",\n                                                children: submissionResult.failedTestCase.input || \"(empty)\"\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                                                className: \"font-medium text-gray-600\",\n                                                children: \"Expected Output:\"\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                className: \"bg-gray-100 p-2 rounded mt-1 whitespace-pre-wrap\",\n                                                children: submissionResult.failedTestCase.expectedOutput\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                                                className: \"font-medium text-gray-600\",\n                                                children: \"Your Output:\"\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                className: \"bg-gray-100 p-2 rounded mt-1 whitespace-pre-wrap\",\n                                                children: submissionResult.failedTestCase.actualOutput || \"(no output)\"\n                                            })\n                                        ]\n                                    }),\n                                    submissionResult.failedTestCase.stderr && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                                                className: \"font-medium text-red-600\",\n                                                children: \"Error:\"\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                className: \"bg-red-100 p-2 rounded mt-1 whitespace-pre-wrap text-red-700\",\n                                                children: submissionResult.failedTestCase.stderr\n                                            })\n                                        ]\n                                    }),\n                                    submissionResult.failedTestCase.diff && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                        className: \"md:col-span-2\",\n                                        children: [\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                                                className: \"font-medium text-yellow-700\",\n                                                children: \"Difference:\"\n                                            }),\n                                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                                className: \"bg-yellow-50 p-2 rounded mt-1 whitespace-pre-wrap text-xs overflow-x-auto border border-yellow-200\",\n                                                children: submissionResult.failedTestCase.diff\n                                            })\n                                        ]\n                                    })\n                                ]\n                            })\n                        ]\n                    }) : /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                        className: \"p-3 border border-green-200 rounded-md bg-green-50\",\n                        children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                            className: \"flex items-center\",\n                            children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                                className: \"text-green-600 font-medium\",\n                                children: \"\\uD83C\\uDF89 All test cases passed!\"\n                            })\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"flex space-x-2 p-4 border-t border-gray-200 bg-gray-50 rounded-b-md\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"button\", {\n                        className: `bg-blue-500 text-white px-4 py-2 rounded-md focus:outline-none transition-colors flex items-center gap-2 ${!code || !language || isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-600'}`,\n                        onClick: handleRunWithTestCases,\n                        disabled: !code || !language || isLoading,\n                        children: [\n                            /*#__PURE__*/ (0, $ayMG0.jsx)((0, $jEyqx.FontAwesomeIcon), {\n                                icon: (0, $8Qx3l.faPlay)\n                            }),\n                            isLoading ? 'Running...' : 'Run Tests'\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                        className: `bg-green-500 text-white px-4 py-2 rounded-md focus:outline-none transition-colors ${!code || !language || isLoading || !hasTestCases || isSubmitting ? 'opacity-50 cursor-not-allowed' : 'hover:bg-green-600'}`,\n                        onClick: handleSubmit,\n                        disabled: !code || !language || isLoading || !hasTestCases || isSubmitting,\n                        children: isSubmitting ? 'Submitting...' : 'Submit'\n                    })\n                ]\n            })\n        ]\n    });\n};\nvar $009f58023029c5c3$export$2e2bcd8739ae039 = $009f58023029c5c3$var$TabbedTestCases;\n\n});\nparcelRegister(\"8kNj5\", function(module, exports) {\n\n$parcel$export(module.exports, \"getTestCases\", () => $6116704f609f969e$export$1179b291e021c1f2);\n\nvar $7Yi7V = parcelRequire(\"7Yi7V\");\nconst $6116704f609f969e$export$1179b291e021c1f2 = async (problemSlug)=>{\n    try {\n        // Fetch the problem details to get test case file names\n        const problemResponse = await fetch(`${(0, $7Yi7V.url)}/database/problems/${problemSlug}.json`);\n        if (!problemResponse.ok) throw new Error(`Failed to fetch problem: ${problemResponse.status}`);\n        const problem = await problemResponse.json();\n        if (!problem.testCases || problem.testCases.length === 0) return [];\n        // Only fetch the first test case for preview\n        const firstTestCase = problem.testCases[0];\n        try {\n            // Fetch input file\n            const inputResponse = await fetch(`${(0, $7Yi7V.url)}/database/testcases/${problemSlug}/${firstTestCase.input}`);\n            if (!inputResponse.ok) {\n                console.warn(`Failed to fetch input file ${firstTestCase.input}: ${inputResponse.status}`);\n                return [];\n            }\n            const input = await inputResponse.text();\n            // Fetch output file\n            const outputResponse = await fetch(`${(0, $7Yi7V.url)}/database/testcases/${problemSlug}/${firstTestCase.output}`);\n            if (!outputResponse.ok) {\n                console.warn(`Failed to fetch output file ${firstTestCase.output}: ${outputResponse.status}`);\n                return [];\n            }\n            const expectedOutput = await outputResponse.text();\n            return [\n                {\n                    input: input.trim(),\n                    expectedOutput: expectedOutput.trim()\n                }\n            ];\n        } catch (error) {\n            console.error('Error fetching first test case:', error);\n            return [];\n        }\n    } catch (error) {\n        console.error('Error fetching test cases:', error);\n        return [];\n    }\n};\n\n});\n\nparcelRegister(\"jUTwv\", function(module, exports) {\nmodule.exports = import(\"hIrIg\").then(()=>parcelRequire('i63Gt'));\n\n});\n\n\n\n//# sourceMappingURL=TabbedTestCases.736c047b.js.map\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash, faCheck, faTimes, faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getTestCases } from \"../repository/getTestCases\";\r\n\r\nconst TabbedTestCases = ({ code, language, onRun, runResult, judgeAvailable, problemSlug }) => {\r\n  const [testCases, setTestCases] = useState([\r\n    { input: \"\", expectedOutput: \"\" }\r\n  ]);\r\n  const [mainTab, setMainTab] = useState('testcases'); // 'testcases' or 'results'\r\n  const [activeTestCaseTab, setActiveTestCaseTab] = useState(0);\r\n  const [activeResultTab, setActiveResultTab] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [problemTestCases, setProblemTestCases] = useState([]);\r\n  const [hasTestCases, setHasTestCases] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submissionResult, setSubmissionResult] = useState(null);\r\n\r\n  // Load test cases when problemSlug changes\r\n  useEffect(() => {\r\n    if (problemSlug) {\r\n      const loadTestCases = async () => {\r\n        try {\r\n          const cases = await getTestCases(problemSlug);\r\n          setProblemTestCases(cases);\r\n          setHasTestCases(cases.length > 0);\r\n          \r\n          // Set the first test case as the default test case in the UI\r\n          if (cases.length > 0) {\r\n            setTestCases([cases[0]]);\r\n          } else {\r\n            setTestCases([{ input: \"\", expectedOutput: \"\" }]);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error loading test cases:', error);\r\n          setHasTestCases(false);\r\n          setTestCases([{ input: \"\", expectedOutput: \"\" }]);\r\n        }\r\n      };\r\n      loadTestCases();\r\n    }\r\n  }, [problemSlug]);\r\n\r\n  // Handle case when judge is not available\r\n  if (!judgeAvailable) {\r\n    return (\r\n      <div className=\"bg-gray-100 p-4 border border-gray-300 rounded-md shadow-md\">\r\n        <div className=\"text-center text-gray-600\">\r\n          <p className=\"font-medium mb-2\">Code Execution Unavailable</p>\r\n          <p className=\"text-sm\">Please start the judge server to enable code execution. <a href='https://github.com/Diwakar-Gupta/pepper/blob/main/judge/README.md' target='_blank' rel='noopener noreferrer' className='text-blue-600 underline hover:text-blue-800'>View setup instructions</a></p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Handle case when language is not selected\r\n  if (!language) {\r\n    return (\r\n      <div className=\"bg-gray-100 p-4 border border-gray-300 rounded-md shadow-md\">\r\n        <div className=\"text-center text-gray-600\">\r\n          <p className=\"font-medium mb-2\">No Language Selected</p>\r\n          <p className=\"text-sm\">Please select a programming language to run code.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const addTestCase = () => {\r\n    const newIndex = testCases.length;\r\n    setTestCases([...testCases, { input: \"\", expectedOutput: \"\" }]);\r\n    setActiveTestCaseTab(newIndex);\r\n  };\r\n\r\n  const removeTestCase = (index) => {\r\n    if (testCases.length > 1) {\r\n      const newTestCases = testCases.filter((_, i) => i !== index);\r\n      setTestCases(newTestCases);\r\n      // Adjust active tabs if necessary\r\n      if (activeTestCaseTab >= newTestCases.length) {\r\n        setActiveTestCaseTab(newTestCases.length - 1);\r\n      } else if (activeTestCaseTab > index) {\r\n        setActiveTestCaseTab(activeTestCaseTab - 1);\r\n      }\r\n      if (activeResultTab >= newTestCases.length) {\r\n        setActiveResultTab(Math.max(0, newTestCases.length - 1));\r\n      } else if (activeResultTab > index) {\r\n        setActiveResultTab(activeResultTab - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateTestCase = (index, field, value) => {\r\n    const updated = [...testCases];\r\n    updated[index][field] = value;\r\n    setTestCases(updated);\r\n  };\r\n\r\n  const handleRunWithTestCases = async () => {\r\n    const validTestCases = testCases.filter(tc => tc.input.trim() !== \"\");\r\n    setIsLoading(true);\r\n    try {\r\n      await onRun(validTestCases);\r\n      // Switch to results main tab after running\r\n      setMainTab('results');\r\n      setActiveResultTab(0);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!hasTestCases) {\r\n      alert(\"No test cases available for this problem.\");\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    try {\r\n      // Import the submit function\r\n      const { submitCodeWithTestCases } = await import(\"../repository/judgeApi\");\r\n      const result = await submitCodeWithTestCases({\r\n        code,\r\n        language,\r\n        problemSlug\r\n      });\r\n      \r\n      // Handle the submission result\r\n      console.log(\"Submission result:\", result);\r\n      setSubmissionResult(result);\r\n    } catch (error) {\r\n      console.error(\"Submission error:\", error);\r\n      alert(`Submission failed: ${error.message}`);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (passed) => {\r\n    if (passed === true) {\r\n      return <FontAwesomeIcon icon={faCheck} className=\"text-green-500\" />;\r\n    } else if (passed === false) {\r\n      return <FontAwesomeIcon icon={faTimes} className=\"text-red-500\" />;\r\n    }\r\n    return <span className=\"text-gray-400\">-</span>;\r\n  };\r\n\r\n  const getStatusText = (passed) => {\r\n    if (passed === true) return \"Passed\";\r\n    if (passed === false) return \"Failed\";\r\n    return \"No expected output\";\r\n  };\r\n\r\n  const hasResults = runResult.results && runResult.results.length > 0;\r\n\r\n  return (\r\n    <div className=\"bg-white border border-gray-300 rounded-md shadow-md relative\">\r\n      {/* Loader Overlay */}\r\n      {isLoading && (\r\n        <div className=\"absolute inset-0 bg-white bg-opacity-70 flex items-center justify-center z-10 rounded-md\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <svg className=\"animate-spin h-8 w-8 text-blue-500 mb-2\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z\"></path>\r\n            </svg>\r\n            <span className=\"text-blue-600 font-medium\">Running test cases...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Tab Headers */}\r\n      <div className=\"border-b border-gray-200 bg-gray-50 rounded-t-md\">\r\n        <div className=\"flex\">\r\n          <button\r\n            onClick={() => setMainTab('testcases')}\r\n            className={`px-4 py-3 text-sm font-medium border-b-2 transition-colors ${\r\n              mainTab === 'testcases'\r\n                ? 'border-blue-500 text-blue-600 bg-white'\r\n                : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-100'\r\n            }`}\r\n          >\r\n            Test Cases\r\n          </button>\r\n          <button\r\n            onClick={() => setMainTab('results')}\r\n            className={`px-4 py-3 text-sm font-medium border-b-2 transition-colors ${\r\n              mainTab === 'results'\r\n                ? 'border-blue-500 text-blue-600 bg-white'\r\n                : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-100'\r\n            } ${!hasResults ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n            disabled={!hasResults}\r\n          >\r\n            Test Results\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Sub Tab Headers */}\r\n        {mainTab === 'testcases' && (\r\n          <div className=\"flex items-center bg-gray-100 border-t border-gray-200\">\r\n            <div className=\"flex items-center overflow-x-auto scrollbar-thin scrollbar-thumb-gray-300\">\r\n              {testCases.map((_, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => setActiveTestCaseTab(index)}\r\n                  className={`px-3 py-2 text-xs font-medium whitespace-nowrap border-b-2 transition-colors ${\r\n                    activeTestCaseTab === index\r\n                      ? 'border-blue-400 text-blue-600 bg-white'\r\n                      : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  Case {index + 1}\r\n                </button>\r\n              ))}\r\n              <button\r\n                onClick={addTestCase}\r\n                className=\"px-3 py-2 text-xs font-medium text-gray-600 hover:text-blue-600 hover:bg-gray-50 transition-colors\"\r\n                title=\"Add Test Case\"\r\n              >\r\n                <FontAwesomeIcon icon={faPlus} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {mainTab === 'results' && hasResults && (\r\n          <div className=\"flex items-center bg-gray-100 border-t border-gray-200\">\r\n            <div className=\"flex items-center overflow-x-auto scrollbar-thin scrollbar-thumb-gray-300\">\r\n              {runResult.results.map((result, index) => (\r\n                <button\r\n                  key={index}\r\n                  onClick={() => setActiveResultTab(index)}\r\n                  className={`px-3 py-2 text-xs font-medium whitespace-nowrap border-b-2 transition-colors flex items-center gap-1 ${\r\n                    activeResultTab === index\r\n                      ? 'border-blue-400 text-blue-600 bg-white'\r\n                      : 'border-transparent text-gray-600 hover:text-gray-800 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  {getStatusIcon(result.passed)}\r\n                  Case {result.testCase}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <div className=\"p-4\">\r\n        {/* Test Cases Content */}\r\n        {mainTab === 'testcases' && (\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"font-medium text-gray-700\">Test Case {activeTestCaseTab + 1}</h3>\r\n              {testCases.length > 1 && (\r\n                <button\r\n                  onClick={() => removeTestCase(activeTestCaseTab)}\r\n                  className=\"text-red-500 hover:text-red-700 text-sm\"\r\n                  title=\"Remove Test Case\"\r\n                >\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </button>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"space-y-3\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-600 mb-1\">\r\n                  Input:\r\n                </label>\r\n                <textarea\r\n                  value={testCases[activeTestCaseTab]?.input || \"\"}\r\n                  onChange={(e) => updateTestCase(activeTestCaseTab, 'input', e.target.value)}\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md text-sm font-mono resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Enter test input...\"\r\n                  style={{ maxHeight: '150px', overflowY: 'auto' }}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-600 mb-1\">\r\n                  Expected Output:\r\n                </label>\r\n                <textarea\r\n                  value={testCases[activeTestCaseTab]?.expectedOutput || \"\"}\r\n                  onChange={(e) => updateTestCase(activeTestCaseTab, 'expectedOutput', e.target.value)}\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md text-sm font-mono resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Enter expected output (optional)...\"\r\n                  style={{ maxHeight: '150px', overflowY: 'auto' }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Test Results Content */}\r\n        {mainTab === 'results' && hasResults && (\r\n          <div className=\"space-y-4\">\r\n            {/* Results Summary */}\r\n            {runResult.summary && (\r\n              <div className=\"p-3 bg-gray-50 rounded-md\">\r\n                <h4 className=\"font-medium text-gray-700 mb-2\">Summary:</h4>\r\n                <div className=\"flex space-x-4 text-sm\">\r\n                  <span className=\"text-green-600\">✓ {runResult.summary.passed} Passed</span>\r\n                  <span className=\"text-red-600\">✗ {runResult.summary.failed} Failed</span>\r\n                  <span className=\"text-gray-600\">- {runResult.summary.noExpectedOutput} No Expected Output</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Individual Result for Active Tab */}\r\n            {runResult.results[activeResultTab] && (\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h3 className=\"font-medium text-gray-700\">Test Case {runResult.results[activeResultTab].testCase}</h3>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    {getStatusIcon(runResult.results[activeResultTab].passed)}\r\n                    <span className={`text-sm ${\r\n                      runResult.results[activeResultTab].passed === true ? 'text-green-600' : \r\n                      runResult.results[activeResultTab].passed === false ? 'text-red-600' : 'text-gray-600'\r\n                    }`}>\r\n                      {getStatusText(runResult.results[activeResultTab].passed)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-3\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-600 mb-1\">\r\n                      Input:\r\n                    </label>\r\n                    <pre className=\"bg-gray-100 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border\">\r\n                      {runResult.results[activeResultTab].input || \"(empty)\"}\r\n                    </pre>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-600 mb-1\">\r\n                      Output:\r\n                    </label>\r\n                    <pre className=\"bg-gray-100 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border\">\r\n                      {runResult.results[activeResultTab].actualOutput || \"(no output)\"}\r\n                    </pre>\r\n                  </div>\r\n                  \r\n                  {runResult.results[activeResultTab].expectedOutput && (\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-600 mb-1\">\r\n                        Expected Output:\r\n                      </label>\r\n                      <pre className=\"bg-gray-100 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border\">\r\n                        {runResult.results[activeResultTab].expectedOutput}\r\n                      </pre>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {runResult.results[activeResultTab].stderr && (\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-red-600 mb-1\">\r\n                        Error:\r\n                      </label>\r\n                      <pre className=\"bg-red-100 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border border-red-200 text-red-700\">\r\n                        {runResult.results[activeResultTab].stderr}\r\n                      </pre>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {runResult.results[activeResultTab].passed === false && runResult.results[activeResultTab].diff && (\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-yellow-700 mb-1\">\r\n                        Difference:\r\n                      </label>\r\n                      <pre className=\"bg-yellow-50 p-2 rounded text-sm font-mono whitespace-pre-wrap max-h-32 overflow-y-auto border border-yellow-200\">\r\n                        {runResult.results[activeResultTab].diff}\r\n                      </pre>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Submission Result */}\r\n      {submissionResult && (\r\n        <div className=\"p-4 border-t border-gray-200\">\r\n          <h4 className=\"font-medium text-gray-700 mb-2\">Submission Result:</h4>\r\n          {submissionResult.failed ? (\r\n            <div className=\"p-3 border border-red-200 rounded-md bg-red-50\">\r\n              <div className=\"flex items-center mb-2\">\r\n                <span className=\"text-red-600 font-medium\">❌ Test Case {submissionResult.testCaseNumber} Failed</span>\r\n              </div>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm\">\r\n                <div>\r\n                  <span className=\"font-medium text-gray-600\">Input:</span>\r\n                  <pre className=\"bg-gray-100 p-2 rounded mt-1 whitespace-pre-wrap\">{submissionResult.failedTestCase.input || \"(empty)\"}</pre>\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium text-gray-600\">Expected Output:</span>\r\n                  <pre className=\"bg-gray-100 p-2 rounded mt-1 whitespace-pre-wrap\">{submissionResult.failedTestCase.expectedOutput}</pre>\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-medium text-gray-600\">Your Output:</span>\r\n                  <pre className=\"bg-gray-100 p-2 rounded mt-1 whitespace-pre-wrap\">{submissionResult.failedTestCase.actualOutput || \"(no output)\"}</pre>\r\n                </div>\r\n                {submissionResult.failedTestCase.stderr && (\r\n                  <div>\r\n                    <span className=\"font-medium text-red-600\">Error:</span>\r\n                    <pre className=\"bg-red-100 p-2 rounded mt-1 whitespace-pre-wrap text-red-700\">{submissionResult.failedTestCase.stderr}</pre>\r\n                  </div>\r\n                )}\r\n                {submissionResult.failedTestCase.diff && (\r\n                  <div className=\"md:col-span-2\">\r\n                    <span className=\"font-medium text-yellow-700\">Difference:</span>\r\n                    <pre className=\"bg-yellow-50 p-2 rounded mt-1 whitespace-pre-wrap text-xs overflow-x-auto border border-yellow-200\">{submissionResult.failedTestCase.diff}</pre>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"p-3 border border-green-200 rounded-md bg-green-50\">\r\n              <div className=\"flex items-center\">\r\n                <span className=\"text-green-600 font-medium\">🎉 All test cases passed!</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"flex space-x-2 p-4 border-t border-gray-200 bg-gray-50 rounded-b-md\">\r\n        <button\r\n          className={`bg-blue-500 text-white px-4 py-2 rounded-md focus:outline-none transition-colors flex items-center gap-2 ${\r\n            !code || !language || isLoading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-600'\r\n          }`}\r\n          onClick={handleRunWithTestCases}\r\n          disabled={!code || !language || isLoading}\r\n        >\r\n          <FontAwesomeIcon icon={faPlay} />\r\n          {isLoading ? 'Running...' : 'Run Tests'}\r\n        </button>\r\n        <button\r\n          className={`bg-green-500 text-white px-4 py-2 rounded-md focus:outline-none transition-colors ${\r\n            !code || !language || isLoading || !hasTestCases || isSubmitting ? 'opacity-50 cursor-not-allowed' : 'hover:bg-green-600'\r\n          }`}\r\n          onClick={handleSubmit}\r\n          disabled={!code || !language || isLoading || !hasTestCases || isSubmitting}\r\n        >\r\n          {isSubmitting ? 'Submitting...' : 'Submit'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabbedTestCases;\r\n","import {url} from \"../constants\";\r\n\r\nexport const getTestCases = async (problemSlug) => {\r\n  try {\r\n    // Fetch the problem details to get test case file names\r\n    const problemResponse = await fetch(`${url}/database/problems/${problemSlug}.json`);\r\n    if (!problemResponse.ok) {\r\n      throw new Error(`Failed to fetch problem: ${problemResponse.status}`);\r\n    }\r\n    \r\n    const problem = await problemResponse.json();\r\n    \r\n    if (!problem.testCases || problem.testCases.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Only fetch the first test case for preview\r\n    const firstTestCase = problem.testCases[0];\r\n    \r\n    try {\r\n      // Fetch input file\r\n      const inputResponse = await fetch(`${url}/database/testcases/${problemSlug}/${firstTestCase.input}`);\r\n      if (!inputResponse.ok) {\r\n        console.warn(`Failed to fetch input file ${firstTestCase.input}: ${inputResponse.status}`);\r\n        return [];\r\n      }\r\n      const input = await inputResponse.text();\r\n      \r\n      // Fetch output file\r\n      const outputResponse = await fetch(`${url}/database/testcases/${problemSlug}/${firstTestCase.output}`);\r\n      if (!outputResponse.ok) {\r\n        console.warn(`Failed to fetch output file ${firstTestCase.output}: ${outputResponse.status}`);\r\n        return [];\r\n      }\r\n      const expectedOutput = await outputResponse.text();\r\n      \r\n      return [{\r\n        input: input.trim(),\r\n        expectedOutput: expectedOutput.trim()\r\n      }];\r\n    } catch (error) {\r\n      console.error('Error fetching first test case:', error);\r\n      return [];\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching test cases:', error);\r\n    return [];\r\n  }\r\n}; ","module.exports = (__parcel__import__(\"hIrIg\")).then(() => parcelRequire('i63Gt'));"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","value","$009f58023029c5c3$export$2e2bcd8739ae039","$ayMG0","$acw62","$jEyqx","$8Qx3l","$8kNj5","code","language","onRun","runResult","judgeAvailable","problemSlug","passed","testCases","setTestCases","useState","input","expectedOutput","mainTab","setMainTab","activeTestCaseTab","setActiveTestCaseTab","activeResultTab","setActiveResultTab","isLoading","setIsLoading","problemTestCases","setProblemTestCases","hasTestCases","setHasTestCases","isSubmitting","setIsSubmitting","submissionResult","setSubmissionResult","useEffect","loadTestCases","cases","getTestCases","length","error","console","jsx","className","children","jsxs","href","target","rel","updateTestCase","index","field","updated","handleRunWithTestCases","validTestCases","filter","tc","trim","handleSubmit","alert","submitCodeWithTestCases","result","log","message","getStatusIcon","FontAwesomeIcon","icon","faCheck","faTimes","hasResults","results","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","onClick","disabled","map","_","newIndex","title","faPlus","testCase","removeTestCase","newTestCases","i","Math","max","faTrash","onChange","rows","placeholder","style","maxHeight","overflowY","summary","failed","noExpectedOutput","actualOutput","stderr","diff","testCaseNumber","failedTestCase","faPlay","$6116704f609f969e$export$1179b291e021c1f2","$7Yi7V","problemResponse","fetch","url","ok","Error","status","problem","json","firstTestCase","inputResponse","warn","text","outputResponse","output","then"],"version":3,"file":"TabbedTestCases.736c047b.js.map"}