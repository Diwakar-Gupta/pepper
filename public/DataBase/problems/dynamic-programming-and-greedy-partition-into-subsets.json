{
  "name": "Partition Into Subsets",
  "slug": "dynamic-programming-and-greedy-partition-into-subsets",
  "description": "1. You are given a number n, representing the number of elements.\n2. You are given a number k, representing the number of subsets.\n3. You are required to print the number of ways in which these elements can be partitioned in k non-empty subsets.\nE.g.\nFor n = 4 and k = 3 total ways is 6\n12-3-4\n1-23-4\n13-2-4\n14-2-3\n1-24-3\n1-2-34\n\n### Input Format\n```\nA number n\nA number k\n```\n\n### Output Format\n```\nA number representing the number of ways in which these elements can be partitioned in k non-empty subsets.\n```\n\n### Constraints\n```\n0 <= n <= 20\n0 <= k <= n\n```\n\n### Sample Input\n```\n4\n3\n```\n\n### Sample Output\n```\n6\n```",
  "externalPlatforms": [],
  "problemVideoLink": "https://www.youtube.com/embed/IiAsqfjhZnY?end=99&rel=0",
  "solutionVideolink": "https://www.youtube.com/embed/IiAsqfjhZnY?start=99&rel=0&loop=1&playlist=IiAsqfjhZnY",
  "codes": {
    "java": "import java.io.*;\nimport java.util.*;\npublic class Main {\n        \n    public static long \npartitionKSubset(int n, int \nk) {\n        // write your code \nhere\n    }\n    \n    public static void main\n(String[] args) throws \nException {\n        Scanner scn = new \nScanner(System.in);\n        int n = scn.nextInt\n();\n        int k = scn.nextInt\n();\n        \n        long res = \npartitionKSubset(n, k);\n        System.out.println\n(res);\n    }\n}"
  }
}