{
  "name": "Generic Tree - Traversals (pre-order, Post-order)",
  "slug": "generic-tree-generic-tree-traversals-pre-order-post-order-",
  "description": "1. You are given a partially written GenericTree class.\n2. You are required to complete the body of traversals function. The function is expected to visit every node. While traversing the function must print following content in different situations.\n   2.1. When the control reaches the node for the first time -> \"Node Pre\" node.data.\n   2.2. Before the control leaves for a child node from a node -> \"Edge Pre\" \n   node.data--child.data.\n   2.3. After the control comes back to a node from a child -> \"Edge Post\" node.data- \n   -child.data.\n    2.4. When the control is about to leave node, after the children have been visited \n    -> \"Node Post\" node.data.\n3. Input is managed for you.\n\n### Input Format\n```\nInput is managed for you\n```\n\n### Output Format\n```\nAs suggested in Sample Output\n```\n\n### Constraints\n```\nNone\n```\n\n### Sample Input\n```\n12\n10 20 -1 30 50 -1 60 -1 -1 40 -1 -1\n```\n\n### Sample Output\n```\nNode Pre 10\nEdge Pre 10--20\nNode Pre 20\nNode Post 20\nEdge Post 10--20\nEdge Pre 10--30\nNode Pre 30\nEdge Pre 30--50\nNode Pre 50\nNode Post 50\nEdge Post 30--50\nEdge Pre 30--60\nNode Pre 60\nNode Post 60\nEdge Post 30--60\nNode Post 30\nEdge Post 10--30\nEdge Pre 10--40\nNode Pre 40\nNode Post 40\nEdge Post 10--40\nNode Post 10\n```",
  "externalPlatforms": [],
  "problemVideoLink": "https://www.youtube.com/embed/kL6tIGhVW1k?rel=0",
  "solutionVideolink": "https://www.youtube.com/embed/YnufWAWOfI8?rel=0&loop=1&playlist=YnufWAWOfI8",
  "codes": {
    "java": ""
  }
}